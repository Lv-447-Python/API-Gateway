version: '3'

services:
  db:
    image: postgres
    volumes:
      - ./createdb.sh:/docker-entrypoint-initdb.d/init.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.7-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin

  web-file:
    build: ../file-service-repository/
    depends_on:
      - db
    links:
      - db
    restart: always
    command: ['./wait-for-it.sh', 'db:5432', '--', 'make', 'run_docker']
    volumes:
      - files_folder:/file_service/files

  web-history:
    build: ../history-service-repository/
    restart: always
    depends_on:
      - db
    links:
      - db
    command: ['./wait-for-it.sh', 'db:5432', '--', 'make', 'run_docker']

  web-user:
    build: ../user-service-repository/
    restart: always
    depends_on:
      - db
    links:
      - db
    command: ['./wait-for-it.sh', 'db:5432', '--', 'make', 'run_docker']


  web-generation:
    build: ../file_generation_service_repository/
    restart: always
    depends_on:
      - rabbitmq
    links:
      - rabbitmq
      - db
    command: ['./wait-for-it.sh', 'db:5432','--','./wait-for-it.sh', 'rabbitmq:5672', '--', 'make', 'run_docker']
    volumes:
      - files_folder:/file_generation_service_repo/files

  web-sharing:
    build: ../file_sharing_service_repository/
    restart: always
    depends_on:
      - rabbitmq
      - db
    links:
      - rabbitmq
      - db
    command: ['./wait-for-it.sh', 'db:5432','--','./wait-for-it.sh', 'rabbitmq:5672', '--', 'make', 'run_docker']

  notification:
    build: ../notification-service/
    restart: always
    depends_on:
      - web-user
      - web-file
      - web-history
      - web-generation
      - web-sharing
    links:
      - web-user
      - web-file
      - web-history
      - web-generation
      - web-sharing
    command: make run_docker

  frontend:
    build: ../frontend-components/
    command: yarn start
    restart: always
    depends_on:
      - web-file
      - web-history
      - web-user
      - web-generation
      - db
    links:
      - web-file
      - web-user
      - web-history
      - web-generation
      - db

  nginx:
    build: ./nginx/
    ports:
      - "80:80"
    restart: always
    depends_on:
      - web-file
      - web-history
      - web-user
      - web-generation
      - db
    links:
      - web-file
      - web-user
      - web-history
      - web-generation
      - db

volumes:
  files_folder:
    driver_opts:
      type: none
      device: $PWD
      o: bind
