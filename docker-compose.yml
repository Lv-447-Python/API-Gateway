version: '2.1'

services:
  db:
    image: postgres
    volumes:
      - ./createdb.sh:/docker-entrypoint-initdb.d/init.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.7-management
    volumes:
      - ./rabbit_start.sh:/docker-entrypoint-initrabbit.d/init.sh
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
      - RABBITMQ_DEFAULT_VHOST=vhost

  web-file:
    build: ../file-service-repository/
    command: >
      /bin/bash -c "
        python manage.py db init
        python manage.py db upgrade
        python manage.py db migrate
        python manage.py db upgrade
        python run.py"
    depends_on:
      db:
        condition: service_healthy
    volumes:
    - files_folder:/file_service/files

  web-history:
    build: ../history-service-repository/
    command: >
      /bin/bash -c "
        python manage.py db init
        python manage.py db upgrade
        python manage.py db migrate
        python manage.py db upgrade
        python run.py"
    depends_on:
      db:
        condition: service_healthy

  web-user:
    build: ../user-service-repository/
    command: >
      /bin/bash -c "
        python manage.py db init
        python manage.py db upgrade
        python manage.py db migrate
        python manage.py db upgrade
        python run.py"
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: ../frontend-components/
    command: yarn start
    links:
      - web-file
      - web-user
      - web-history
    depends_on:
      web-file:
        condition: service_started
      web-history:
        condition: service_started
      web-user:
        condition: service_started
      db:
        condition: service_healthy

  nginx:
    build: ./nginx/
    ports:
      - "80:80"
    restart: always
    depends_on:
      web-file:
        condition: service_started
      web-history:
        condition: service_started
      web-user:
        condition: service_started
      db:
        condition: service_healthy

volumes:
  files_folder:
    driver_opts:
      type: none
      device: $PWD
      o: bind
